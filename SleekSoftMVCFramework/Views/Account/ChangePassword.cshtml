
@model SleekSoftMVCFramework.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = null;
}


@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()


    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h1 class="page-heading" id="myModalLabel">Change Password</h1>
        </div>

        @Html.ValidationSummary("", new { @class = "text-danger" })


        <div class="modal-body">
            <div class="form-group">
                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @placeholder = "Old Password", required = true, @autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @placeholder = "New Password", required = true, @autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", required = true, @autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-info">@ViewBag.ButtonAction</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




